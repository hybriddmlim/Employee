<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="webapp.dao.DeptDao">
	<select id="selectByDeptno" resultType="webapp.model.Dept"
		parameterType="Integer"><!-- id는 이 프로젝트 인터페이스의 메소드와 똑같은 역할을 한다. -->
		<!-- resultType은 메소드의 return type을 나타낸다. 풀내임을 줘야한다. -->
		<!-- parameterType은 풀내임을 안줘도 된다. -->
		<!-- 여기를 공부할때 실제 구현한 webapp.dao.impl.jdbcDeptDao와 SpringDeptDao 등과 비교를 
			해보아라. -->
		SELECT *
		FROM dept
		WHERE deptno = #{deptno}
	</select>

	<select id="selectByDeptnoWithEmps" resultMap="deptWithEmps">
		SELECT * FROM dept
		d LEFT JOIN emp e ON d.deptno = e.deptno WHERE d.deptno=#{deptno}
	</select>


	<select id="selectAll" resultType="webapp.model.Dept">
		SELECT *
		FROM dept
	</select>

	<!-- <resultMap type="webapp.model.Emp" id="xxx"> -->
	<!-- <id property="empno" column="empno" /> -->
	<!-- <result property="ename" column="ename" /> -->
	<!-- <result property="job" column="job" /> -->
	<!-- <result property="mgr" column="mgr" /> -->
	<!-- <result property="hiredate" column="hiredate" /> -->
	<!-- <result property="sal" column="sal" /> -->
	<!-- <result property="comm" column="comm" /> -->
	<!-- </resultMap> -->


	<resultMap type="webapp.model.Dept" id="deptWithEmps">
		<id property="deptno" column="deptno" />
		<result property="dname" column="dname" />
		<result property="loc" column="loc" />
		<collection property="emps" ofType="webapp.model.Emp">
			<id property="empno" column="empno" />
			<result property="ename" column="ename" />
			<result property="job" column="job" />
			<result property="mgr" column="mgr" />
			<result property="hiredate" column="hiredate" />
			<result property="sal" column="sal" />
			<result property="comm" column="comm" />
		</collection>


	</resultMap>

</mapper>
